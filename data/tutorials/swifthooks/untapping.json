{"hierarchy":{"modules":[{"projects":[{"reference":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Key-Concepts","sections":[{"reference":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Key-Concepts#Nomenclature","kind":"task"},{"reference":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Key-Concepts#Asynchronous-Variants","kind":"task"},{"reference":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Key-Concepts#Check-Your-Understanding","kind":"assessment"}]}],"reference":"doc:\/\/com.intuit.hooks\/tutorials\/User-Guide\/Getting-Started\/Key-Concepts"},{"projects":[{"reference":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Plugin-Architecture","sections":[{"reference":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Plugin-Architecture#Simple-Example","kind":"task"},{"reference":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Plugin-Architecture#Practical-Example","kind":"task"}]}],"reference":"doc:\/\/com.intuit.hooks\/tutorials\/User-Guide\/Getting-Started\/Plugin-Architecture"},{"projects":[{"reference":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Interceptors-Usage","sections":[{"kind":"task","reference":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Interceptors-Usage#Register-Interceptors"},{"kind":"task","reference":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Interceptors-Usage#Tap-Interceptors"},{"kind":"task","reference":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Interceptors-Usage#Call-Interceptors"},{"kind":"task","reference":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Interceptors-Usage#Loop-Interceptors"},{"kind":"task","reference":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Interceptors-Usage#All-Interceptors"}]}],"reference":"doc:\/\/com.intuit.hooks\/tutorials\/User-Guide\/Advanced-Usage\/Interceptors"},{"projects":[{"reference":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/HookContextGuide","sections":[{"kind":"task","reference":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/HookContextGuide#Tapping-with-Context"}]}],"reference":"doc:\/\/com.intuit.hooks\/tutorials\/User-Guide\/Advanced-Usage\/Context"},{"projects":[{"reference":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Untapping","sections":[{"kind":"task","reference":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Untapping#Untapping-Generated-IDs"},{"kind":"task","reference":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Untapping#Untapping-Supplied-IDs"}]}],"reference":"doc:\/\/com.intuit.hooks\/tutorials\/User-Guide\/Advanced-Usage\/Untapping"}],"reference":"doc:\/\/com.intuit.hooks\/tutorials\/User-Guide","paths":[["doc:\/\/com.intuit.hooks\/tutorials\/User-Guide","doc:\/\/com.intuit.hooks\/tutorials\/User-Guide\/Advanced-Usage","doc:\/\/com.intuit.hooks\/tutorials\/User-Guide\/Advanced-Usage\/Untapping"]]},"kind":"project","metadata":{"categoryPathComponent":"User-Guide","title":"Untapping","category":"SwiftHooks","role":"project"},"schemaVersion":{"patch":0,"minor":2,"major":0},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"text":"All hooks have the ability to remove taps by calling ","type":"text"},{"code":"untap(_:)","type":"codeVoice"},{"text":".","type":"text"}]}],"title":"Untapping","kind":"hero","chapter":"Untapping","estimatedTimeInMinutes":2},{"tasks":[{"stepsSection":[{"media":null,"caption":[],"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All "},{"code":"tap","type":"codeVoice"},{"type":"text","text":" calls will return an ID to untap with. The id can be "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if a register interceptor rejected the tap."}]}],"code":"UntapGeneratedId.swift","type":"step"}],"title":"Untapping Generated IDs","anchor":"Untapping-Generated-IDs","contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"IDs are generated automatically automatically if omitted."}]}]}]},{"stepsSection":[{"code":"UntapSuppliedId.swift","media":null,"runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All "},{"code":"tap","type":"codeVoice"},{"type":"text","text":" calls will return an ID to untap with. The id can be "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if a register interceptor rejected the tap."}]}],"type":"step"}],"title":"Untapping Supplied IDs","anchor":"Untapping-Supplied-IDs","contentSection":[{"mediaPosition":"trailing","content":[{"inlineContent":[{"text":"IDs can be supplied to any ","type":"text"},{"code":"tap","type":"codeVoice"},{"text":" call to use a specific ID. Tapping a hook with the same ID more than once will only retain the most recent tap.","type":"text"}],"type":"paragraph"}],"kind":"contentAndMedia"}]}],"kind":"tasks"}],"identifier":{"url":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Untapping","interfaceLanguage":"swift"},"references":{"doc://com.intuit.hooks/tutorials/User-Guide/Advanced-Usage/Interceptors":{"url":"\/tutorials\/user-guide\/advanced-usage\/interceptors","type":"topic","kind":"article","role":"article","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/User-Guide\/Advanced-Usage\/Interceptors","title":"Interceptors","abstract":[]},"doc://com.intuit.hooks/tutorials/SwiftHooks/HookContextGuide#Tapping-with-Context":{"url":"\/tutorials\/swifthooks\/hookcontextguide#Tapping-with-Context","type":"section","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/HookContextGuide#Tapping-with-Context","title":"Tapping with Context","abstract":[{"text":"All taps have an option of the tapping closure to also receive context. Context can be populated by interceptors, so allow more fine grained interaction between plugins.","type":"text"}]},"doc://com.intuit.hooks/tutorials/SwiftHooks/Plugin-Architecture#Practical-Example":{"role":"pseudoSymbol","title":"Practical Example","type":"section","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Plugin-Architecture#Practical-Example","url":"\/tutorials\/swifthooks\/plugin-architecture#Practical-Example","kind":"section","abstract":[{"text":"SwiftHooks can be used adhoc, and work well at it, the main use case is to enable a plugin architecture. Plugin architecture can be perceived as similar to the delegate patterns frequently used in iOS frameworks, such as UIKit.","type":"text"}]},"doc://com.intuit.hooks/tutorials/SwiftHooks/Untapping#Untapping-Supplied-IDs":{"title":"Untapping Supplied IDs","kind":"section","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Untapping#Untapping-Supplied-IDs","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"All hooks have the ability to remove taps by calling "},{"code":"untap(_:)","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/tutorials\/swifthooks\/untapping#Untapping-Supplied-IDs"},"doc://com.intuit.hooks/tutorials/SwiftHooks/Key-Concepts#Asynchronous-Variants":{"kind":"section","title":"Asynchronous Variants","type":"section","role":"pseudoSymbol","url":"\/tutorials\/swifthooks\/key-concepts#Asynchronous-Variants","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Key-Concepts#Asynchronous-Variants","abstract":[{"text":"Introduction to SwiftHooks","type":"text"}]},"doc://com.intuit.hooks/tutorials/SwiftHooks/Key-Concepts#Nomenclature":{"url":"\/tutorials\/swifthooks\/key-concepts#Nomenclature","abstract":[{"type":"text","text":"Introduction to SwiftHooks"}],"type":"section","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Key-Concepts#Nomenclature","kind":"section","role":"pseudoSymbol","title":"Nomenclature"},"doc://com.intuit.hooks/tutorials/SwiftHooks/Plugin-Architecture":{"url":"\/tutorials\/swifthooks\/plugin-architecture","estimatedTime":"5min","type":"topic","kind":"project","role":"project","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Plugin-Architecture","title":"Plugin Architecture","abstract":[{"type":"text","text":"SwiftHooks can be used adhoc, and work well at it, the main use case is to enable a plugin architecture. Plugin architecture can be perceived as similar to the delegate patterns frequently used in iOS frameworks, such as UIKit."}]},"doc://com.intuit.hooks/tutorials/SwiftHooks/Key-Concepts#Check-Your-Understanding":{"url":"\/tutorials\/swifthooks\/key-concepts#Check-Your-Understanding","titleInlineContent":[{"type":"text","text":"Check Your Understanding"}],"title":"Check Your Understanding","type":"link","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Key-Concepts#Check-Your-Understanding"},"doc://com.intuit.hooks/tutorials/SwiftHooks/Interceptors-Usage#Call-Interceptors":{"url":"\/tutorials\/swifthooks\/interceptors-usage#Call-Interceptors","type":"section","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Interceptors-Usage#Call-Interceptors","title":"Call Interceptors","abstract":[{"text":"Every Hook provides the capability to register interceptor functions for different parts of the Hook lifecycle","type":"text"}]},"doc://com.intuit.hooks/tutorials/User-Guide":{"title":"User Guide","type":"topic","kind":"overview","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/User-Guide","abstract":[{"type":"text","text":"Learn how to use SwiftHooks"}],"role":"overview","url":"\/tutorials\/user-guide"},"doc://com.intuit.hooks/tutorials/User-Guide/Advanced-Usage/Untapping":{"url":"\/tutorials\/user-guide\/advanced-usage\/untapping","abstract":[],"type":"topic","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/User-Guide\/Advanced-Usage\/Untapping","kind":"article","role":"article","title":"Untapping"},"doc://com.intuit.hooks/tutorials/SwiftHooks/Plugin-Architecture#Simple-Example":{"title":"Simple Example","type":"section","kind":"section","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Plugin-Architecture#Simple-Example","abstract":[{"text":"SwiftHooks can be used adhoc, and work well at it, the main use case is to enable a plugin architecture. Plugin architecture can be perceived as similar to the delegate patterns frequently used in iOS frameworks, such as UIKit.","type":"text"}],"role":"pseudoSymbol","url":"\/tutorials\/swifthooks\/plugin-architecture#Simple-Example"},"doc://com.intuit.hooks/tutorials/User-Guide/Advanced-Usage/Context":{"title":"Context","kind":"article","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/User-Guide\/Advanced-Usage\/Context","type":"topic","role":"article","abstract":[],"url":"\/tutorials\/user-guide\/advanced-usage\/context"},"doc://com.intuit.hooks/tutorials/SwiftHooks/Interceptors-Usage":{"url":"\/tutorials\/swifthooks\/interceptors-usage","estimatedTime":"5min","type":"topic","kind":"project","role":"project","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Interceptors-Usage","title":"Interceptors","abstract":[{"type":"text","text":"Every Hook provides the capability to register interceptor functions for different parts of the Hook lifecycle"}]},"doc://com.intuit.hooks/tutorials/SwiftHooks/Untapping":{"url":"\/tutorials\/swifthooks\/untapping","abstract":[{"text":"All hooks have the ability to remove taps by calling ","type":"text"},{"type":"codeVoice","code":"untap(_:)"},{"text":".","type":"text"}],"estimatedTime":"2min","type":"topic","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Untapping","kind":"project","role":"project","title":"Untapping"},"doc://com.intuit.hooks/tutorials/SwiftHooks/Interceptors-Usage#Loop-Interceptors":{"url":"\/tutorials\/swifthooks\/interceptors-usage#Loop-Interceptors","type":"section","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Interceptors-Usage#Loop-Interceptors","title":"Loop Interceptors","abstract":[{"type":"text","text":"Every Hook provides the capability to register interceptor functions for different parts of the Hook lifecycle"}]},"doc://com.intuit.hooks/tutorials/SwiftHooks/Untapping#Untapping-Generated-IDs":{"title":"Untapping Generated IDs","kind":"section","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Untapping#Untapping-Generated-IDs","type":"section","role":"pseudoSymbol","abstract":[{"text":"All hooks have the ability to remove taps by calling ","type":"text"},{"type":"codeVoice","code":"untap(_:)"},{"text":".","type":"text"}],"url":"\/tutorials\/swifthooks\/untapping#Untapping-Generated-IDs"},"doc://com.intuit.hooks/tutorials/SwiftHooks/Interceptors-Usage#Register-Interceptors":{"kind":"section","title":"Register Interceptors","type":"section","role":"pseudoSymbol","url":"\/tutorials\/swifthooks\/interceptors-usage#Register-Interceptors","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Interceptors-Usage#Register-Interceptors","abstract":[{"text":"Every Hook provides the capability to register interceptor functions for different parts of the Hook lifecycle","type":"text"}]},"doc://com.intuit.hooks/tutorials/SwiftHooks/Interceptors-Usage#Tap-Interceptors":{"title":"Tap Interceptors","type":"section","kind":"section","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Interceptors-Usage#Tap-Interceptors","abstract":[{"text":"Every Hook provides the capability to register interceptor functions for different parts of the Hook lifecycle","type":"text"}],"role":"pseudoSymbol","url":"\/tutorials\/swifthooks\/interceptors-usage#Tap-Interceptors"},"UntapSuppliedId.swift":{"syntax":"swift","highlights":[],"content":["let someHook = SyncHook<Int>()","let specificId = UUID().uuidString","let id: String? = someHook.tap(name: \"Example\", id: specificId) { value in","    print(value)","}","","\/\/\/ `id` will be ``nil`` if the tap was rejected by a register interceptor","","id.map { someHook.untap($0) }","\/\/ or use the ID directly","someHook.untap(specificId)"],"fileType":"swift","type":"file","fileName":"Untap.swift","identifier":"UntapSuppliedId.swift"},"doc://com.intuit.hooks/tutorials/User-Guide/Getting-Started/Plugin-Architecture":{"title":"Plugin Architecture","kind":"article","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/User-Guide\/Getting-Started\/Plugin-Architecture","type":"topic","role":"article","abstract":[],"url":"\/tutorials\/user-guide\/getting-started\/plugin-architecture"},"UntapGeneratedId.swift":{"syntax":"swift","highlights":[],"content":["let someHook = SyncHook<Int>()","","let id: String? = someHook.tap(name: \"Example\") { value in","    print(value)","}","","\/\/\/ `id` will be ``nil`` if the tap was rejected by a register interceptor","","id.map { someHook.untap($0) }"],"fileType":"swift","type":"file","fileName":"Untap.swift","identifier":"UntapGeneratedId.swift"},"doc://com.intuit.hooks/tutorials/User-Guide/Getting-Started/Key-Concepts":{"title":"Key Concepts","type":"topic","kind":"article","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/User-Guide\/Getting-Started\/Key-Concepts","abstract":[],"role":"article","url":"\/tutorials\/user-guide\/getting-started\/key-concepts"},"doc://com.intuit.hooks/tutorials/SwiftHooks/Key-Concepts":{"url":"\/tutorials\/swifthooks\/key-concepts","estimatedTime":"5min","type":"topic","kind":"project","role":"project","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Key-Concepts","title":"Key Concepts","abstract":[{"text":"Introduction to SwiftHooks","type":"text"}]},"doc://com.intuit.hooks/tutorials/SwiftHooks/Interceptors-Usage#All-Interceptors":{"url":"\/tutorials\/swifthooks\/interceptors-usage#All-Interceptors","type":"section","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/Interceptors-Usage#All-Interceptors","title":"All Interceptors","abstract":[{"text":"Every Hook provides the capability to register interceptor functions for different parts of the Hook lifecycle","type":"text"}]},"doc://com.intuit.hooks/tutorials/SwiftHooks/HookContextGuide":{"title":"Hook Context","type":"topic","kind":"project","identifier":"doc:\/\/com.intuit.hooks\/tutorials\/SwiftHooks\/HookContextGuide","estimatedTime":"5min","abstract":[{"type":"text","text":"All taps have an option of the tapping closure to also receive context. Context can be populated by interceptors, so allow more fine grained interaction between plugins."}],"role":"project","url":"\/tutorials\/swifthooks\/hookcontextguide"}}}